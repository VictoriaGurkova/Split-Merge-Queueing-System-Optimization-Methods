function [g,d] = iterative_method(n, p, q)

%    данные из примера
%    n=2; %число состояний
%    nk=[2 2]; %вектор числа управлений в состояниях
%    p(:,:,1)=[0.5 0.5; 0.8 0.2]; %вероятности для состояния 1
%    p(:,:,2)=[0.4 0.6; 0.7 0.3]; %вероятности для состояния 2
%    q(:,1)=[6;4]; %доходы для состояния 1
%    q(:,2)=[-3;-5]; %доходы для состояния 2

d1=[1 1]; % Начальное решение


    nk = [];
    d1 = [];
    for i = 1 : n
        nk = [nk n];
        d1 = [d1 1];
    end

    w=0; % счетчик итераций
    flag=true; % индикатор несовпадения решений на последовательных итерациях

    % итерационный цикл
    while flag==true
        disp('Итерация ')
        w=w+1
        d=d1

        pd=[];
        qd=[];
        for i=1:n
            pd=[pd;p(d(i),:,i)];
            qd=[qd;q(d(i),i)];
        end

        % решение системы линейных уравнений (определение весов)
        v=zeros(n,1)
        g=0;
        koef1=eye(n,n)-pd;
        koef=zeros(n,n);
        koef(:,1)=ones(n,1)
        koef(:,2:n)=koef1(:,1:n-1)
        pd
        x=koef\qd
        g=x(1)
        v(1:n-1)=x(2:n)

        % улучшение решения
        i=1;
        while i<=n
            kriter=zeros(1,nk(i));
            for k=1:nk(i)
                kriter(k)=q(k)+p(k,:,i)*v;
            end
            dt=find(kriter==max(kriter));
            d1(i)=dt(1);
            i=i+1;
        end

        disp('Решение на итерации')
        d1

        % проверка совпадения решений на последовательных итерациях
        if all(d1==d)
            flag=false;
        end

    end % конец итерационного цикла
end